package company.graph;

import java.io.IOException;

/**
 * 图的最短路径问题
 *
 * @author zhuwenwen
 * @date 17:01 07-07-2020
 **/
public class MinRoute {

    /**
     * Shopee物流会有很多个中转站。在选址的过程中，会选择离用户最近的地方建一个物流中转站。
     *
     * 假设给你一个二维平面网格，每个格子是房子则为1，或者是空地则为0。
     * 找到一个空地修建一个物流中转站，使得这个物流中转站到所有的房子的距离之和最小。 能修建，则返回最小的距离和。如果无法修建，则返回 -1。
     *
     *
     * 若范围限制在100*100以内的网格，如何计算出最小的距离和？
     *
     * 当平面网格非常大的情况下，如何避免不必要的计算？
     *
     * 输入：
     * 4
     * 0 1 1 0
     * 1 1 0 1
     * 0 0 1 0
     * 0 0 0 0
     *
     * 输出：
     * 8
     *
     * 能修建，则返回最小的距离和。如果无法修建，则返回 -1。
     *
     * 先找出所有节点为1的节点,然后对数组进行遍历,计算出每个节点到中转站的距离，
     * 为了避免不必要的计算，可以判断空地是出去两个中转站左边还是右边还是中间，然后进行计算操作（拆分成行和列进行分别计算）
     *
     */
    public static int getMinRouter(int[][] a) {

        return -1;
    }

    public static void main(String[] args) throws IOException {

    }
}
